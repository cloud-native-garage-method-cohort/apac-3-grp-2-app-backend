apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  annotations:
    app.openshift.io/runtime: nodejs
  labels:
    app: mvn-pipeline
    app.kubernetes.io/instance: mvn-pipeline-instance
    app.kubernetes.io/name: mvn-pipeline
  name: mvn-pipeline
spec:
  params:
    - name: source-repo
      type: string
      description: Source git repository
    - name: image-repo
      type: string
      description: Docker image name
    - name: app-name
      type: string
      description: Application name
  workspaces:
    - name: pipeline-shared-data
      description: |
        This workspace stores the cloned repository and is available to all steps
    - name: maven-settings
      description: |
        this is for maven settings
  tasks:
    - name: clone-repository
      taskRef:
        kind: ClusterTask
        name: git-clone
      params:
        - name: url
          value: "$(params.source-repo)"
      workspaces:
        - name: output
          workspace: pipeline-shared-data
    - name: maven-run
      taskRef:
        name: maven
      runAfter:
        - clone-repository
      params:
        - name: CONTEXT_DIR
          value: "."
        - name: MAVEN_IMAGE
          value: "maven:3.8.1-adoptopenjdk-16-openj9"
        - name: GOALS
          value:
            - clean
            - package
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: pipeline-shared-data
    - name: build-image
      taskRef:
        kind: ClusterTask
        name: buildah
      runAfter:
        - maven-run
      params:
        - name: IMAGE
          value: "$(params.image-repo):$(tasks.clone-repository.results.commit)"
      workspaces:
        - name: source
          workspace: pipeline-shared-data
    - name: helm-install
      taskRef:
        kind: Task
        name: helm-upgrade-from-source
      runAfter:
        - build-image
      params:
        - name: charts_dir
          value: chart/cnb-feedback-backend-service
        - name: release_name
          value: cnb-feedback-backend-service
        - name: release_namespace
          value: "$(context.pipelineRun.namespace)"
        - name: overwrite_values
          value: "app.name=$(params.app-name),image.repository=$(params.image-repo),image.tag=$(tasks.clone-repository.results.commit)"
      workspaces:
        - name: source
          workspace: pipeline-shared-data
