{{- with .Values.app -}}
{{ if eq .expose "oc-route" }}
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  annotations:
    "helm.sh/hook": post-install,post-upgrade
  labels:
    app: {{$.Release.Name}}
  name: {{$.Release.Name}}
spec:
  port:
    targetPort: tcp
  to:
    kind: Service
    name: {{$.Release.Name}}
    weight: 100
  tls:
    termination: edge
  wildcardPolicy: None
---
{{ end }}
kind: Service
apiVersion: v1
metadata:
  name: {{$.Release.Name}}
spec:
  selector:
    app: {{$.Release.Name}}
  type: ClusterIP
  ports:
    - port: 80
      name: tcp
      targetPort: {{.containerPort}}
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{$.Release.Name}}
  name: {{$.Release.Name}}
spec:
  replicas: {{.replicas }}
  selector:
    matchLabels:
      app: {{$.Release.Name}}
  template:
    metadata:
      labels:
        app: {{$.Release.Name}}
    spec:
      containers:
        - name: app
          image: {{ $.Values.image.repository }}:{{ $.Values.image.tag }}
          imagePullPolicy: {{.imagePullPolicy | default "IfNotPresent"}}
          {{ if .resources }}
          resources:
            {{ toYaml .resources | nindent 12 }}
          {{ end }}
          envFrom:
          - secretRef:
              name: mongodb-{{$.Release.Name}}
          ports:
            - containerPort: {{.containerPort}}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: {{.containerPort}}
            initialDelaySeconds: 15
            failureThreshold: 10
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: {{.containerPort}}
            initialDelaySeconds: 15
            failureThreshold: 10
            periodSeconds: 3
      restartPolicy: Always
      {{ if $.Values.image.pullSecret }}
      imagePullSecrets:
        - name: {{ $.Values.image.pullSecret }}
      {{ end }}
{{- end -}}